TODO
====

- update lime

- readme.md

- framework like flixel or lime
  - separate pure xt3d framework
  - fix lime version
  - add include.xml
    - include lime dependency ?
  - samples
  - private demos
  - template project
  - remove Openfl/framework test from xt3d script

- textures
  - screen shot

- Exporter

- Gestures:
  - Swipe
  - Long press

- interactions
  - keyboard

- more demos

- html5 development env to automatically build and re-deploy on server

- perfs
  - checking if uniforms change: optional?
  - check ios

- View
  - viewport/rectangle
  - multiple views

- Picking
  - ray picking
  - handle for multiple views/views smaller than display

- 3DEvents
  - event/picking filter : callbacks on individual objects
    - touch/move/release callbacks on specific object

- Scene and Node
  - follow node

- Material implementation
  - texture material
  - color material
  - lighting
  - animated texture

- primitives
  - cube
  - torus
  - arrow
  - cone
  - cylinder
  - ellipsoid
  - ovoid
  - multimaterial cube (extras)

- platform support
  - android
    - problem returning to application
  - retina display/pixel density

- interactions
  - accelerometer

- Camera
  - Follow camera
  - Spring camera

- Actions
  - complete range of actions
    - transformations
      - spline
    - grouping
      - sequence
      - parallel
    - delays/repeats
  - action manager
    - link to scheduler
    - pausable
  - tweening/easing

- Animators (simple)
  - mini skinning
    - vertex texure
  - key frame

- text rendering
  - fps display
  - reading bitmap fonts
  - ttf fonts

- native integration
  - export API
  - integration to JS
  - integration to C++

- Render Nodes
  - Billboard
  - Particle systems
    - Particle generator
  - Lines

- textures
  - pvr textures
  - texture cube
  - depth texture

- Effects
  - bump mapping / normal mapping
    - bump to normal convertor
  - shadows
    - shadow casting lights
    - shadow mapping
    - planar shadows

- Importers
 - OBJ
 - DAE
 - POD

- Skeleton and Bones
 - animators (complex)
   - skinning

- physics
  - bridge to physics lib

- GUI
  - button
  - image
  - label
  - progress bar


- Third party utilities
  - Bitmap font
  - texture packer
  - particle designer



TODO IF POSSIBLE
================

- handle multiple contexts
  - all objects created with a contextId ?


DONE
====

x Intellij
x Use Float32Array and Matrix4 for KFUniform data
x Uniform: set value in GPU
x Global uniforms
x use haxe properties
x Event emitter
x Camera
x   Camera properties
x Geometry
x   VertexAttribute buffers
x StateManager
x MeshNode (Geometry and Material)
x update camera matrices if not added to the scene
x attribute state manager
x pass state managers to vertex data (remove singleton)
x get OpenGL doc offline
x custom attributes
x interleaved data
x store vertex attribute size, type (GL.Float, etc) in VertexData rather than separate maps
x handle ubyte color arrays
x update haxe, openfl, lime
x Int32Array indexes not working?
x verify/set float precisions in shaders
x textures
x   use state/texture manager for binding textures
x   don't create GLTexture immediately : wait until 'update' render phase
x   texture uniforms
x     automatically bind texture on material update
x   texture units ?
x     manual or automatic ?
x   unbind texture when deleted
x   non-pow2 images
x     need to modify UVs ?
x     three.js offsetRepeat uniform to dynamically scale/translate UVs
x   load from png
x   load from jpg
x   assets or url
x   load textures asynchronously and use callback to indicate that the data can be uploaded to gpu
x   different bit formats (8888, 4444)
x   from color
x handle "prepareForUse" in program uniforms
x verify blending (transparency)
x render order : group by geometries
x   group by materials?
x Primitives
x   plane
x   sphere
x material depth testing
x Performance
x   reuse Float32Array in Uniform.use
x   Try fixed size Float32Array for vertex data
x   Determine if array or matrix values are different (uniform.setMatrix)
x   verify inline getters/setters
x   remove some matrices sent to gpu : rejected since we test which matrices are needed
x Render texture
x   profile in iOS
x   improve demo
x   handle gl.clear better (states)
x   handle depth/stencil/color clear better and change resetFrameBuffer in renderer
x   figure out ios problem with stencil buffer
x   remove renderTexture.end
x   transparent bg clear color / general problem with opacity
x     Problem is that texture alpha = 0.0 (or value of alpha if we use bitmap data to create texture)
x   FrameBuffer/RenderBuffer Manager to avoid calling when no change occurs
x Architecture
x   remove passing textureManager/bufferManager etc : get from current director/renderer
x remove all singletons?
x   use "current" director
x schedule callbacks in nodes (update with dt)
x   Improve test with overloaded View
x lighting
x   Light class
x   Gather lights at beginning of render cycle and set global uniforms
x   shader extensions based on names
x     _texture, _phong, _etc
x   declare uniform types in shaderlib
x   uniform array types
x   uniform struct types
x   bool shader data type
x   GouraudShader (per vertex)
x   Lights as global uniforms
x     Add variables (including MAX_LIGHTS) to uniform lib (combine these with those in shader lib)
x     Add data types to uniform lib (combine these to those in shaderlib)
x     allow for uniform lib (common uniforms) to have array/struct types
x     Use common lighting uniforms in gouraud shader
x   Set lighting uniforms from scene lights
x   optimisation to setting lighting uniforms in Light
x   default values for uniform typedefs
x   Material colors/shininess
x   PhongShader (per pixel)
x   shared "includes" for vertex and fragment shaders
x shader files automatically from directory, modify ShaderReader so don't need to specify glsl files
x director configuration options
x  shader precision
x  number of lights (MAX_LIGHTS)
x    verify number of lights doesn't exceed config value each frame
x  frame rate
x refactor XTExceptions
x Integration Lime GLContext / remove openfl dependencies
x   remove all openfl dependencies
x   set framerate : Application
x   set depth/stencil buffers :
x     ApplicationMain.config : antialiasing, depthbuffer, etc
x   remove openfl OpenGL view: use lime directly
x     openfl GLRenderer sets clearColor every frame and binds framebuffer every frame
x   listen to resize/frame_enter events
x limeGlView
x   get view rectangle/size
x   send gl to renderer
x   update renderer viewport only at init and during resize
x   see lime gl example
x   do simple test
x remove all openfl dependencies
x   vector3
x   matrix4
x   bitmapdata
x     use arraybuffer for vector/matrix data
x Render loop
x   fps setting
x Fps calculator
x   console log
x demos framework
x   use isgl3d as base
x   command line building
x errors
x   add warning on vertex/index data that is too big
x   glInfo (max vertex size)
x lights
x   add rendered object to show light position
x interactions
x   mouse/touch events
x     Bring into single interface of tap (multi), swipe, pinch (left click + scroll wheel), drag, pan (=scroll wheel), rotate, press+tap (=right-click)
x   gesture handler
x     Node : addChild, onAddedToScene, etc
x Camera
x   Camera controller
x Node:
x   onAddedToScene
x   onRemoveFromScene
x Picking
x   render picking
x     16 bits for face ( each face = 3 elements) and 16 bit for object
x     render pass with id
x       specify objects that are rendered for specific id
x   face picking
x  - object picking
x Uniforms
x   int values







